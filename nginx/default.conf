upstream client { #defines an upstream called client 
  server client:3000; #server called client at port 3000
}

upstream api {
  server api:5000; # server - keyword in nginx - operator in the nginx world
}

server { #this is the main body of the configuration for nginx
  listen 80; #we want a server that listens on port 80

  location / { #if anyone goes to / we set up a proxy to client upstream (pass through this request to the client upstream)
    proxy_pass http://client;
  }

  location /api {
    #a rewrite rule/directive
    rewrite /api/(.*) /$1 break; #apply the regex that matches "/api/...", when matched take off the "api" part and leave the rest of it ($1) = $1 - reference to whatever text that matches the regex (.*)
                                 #break - a directive. Do not apply any other rewrite rules after this one (think switch). Otherwise nginx will continously rewrite the url and tries to match to a new route   
    proxy_pass http://api; 
  }

  # expose a route to allow a websocket connection with the running react process
  location /ws {
    proxy_pass http://client;

    #these cofnig are specifically to allow websocket connections
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
}